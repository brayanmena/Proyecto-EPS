//Librerías
import java.util.ArrayList;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

//Vista
public class VistaRequerimientosReto4 {
    public static ControladorRequerimientosReto4 controlador = new ControladorRequerimientosReto4();

    public static void requerimiento1() {

        System.out.println("-----Proyecto Ciudad-------");
        System.out.println("Constructora Fecha_Inicio Clasificación");

        try {
            ArrayList<ProyectoCiudad> rankingProyectosCiudad = controlador.consultarProyectoCiudad();

            for (ProyectoCiudad p : rankingProyectosCiudad) {
                System.out.printf("%s %s %s %n", p.getConstructora(), p.getFechaInicio(), p.getClasificacion());
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    public static void requerimiento3() {
        System.out.println("-----Suma Cantidades-------");
        System.out.println("Suma Cantidades");

        try {
            ArrayList<SumaProveedor> rankingSumaProveedor = controlador.consultarSumaProveedor();

            for (SumaProveedor s : rankingSumaProveedor) {
                System.out.printf("%s %n", s.getCantidad());
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    public static void requerimiento4() {
        System.out.println("-----Líder Ciudad-------");
        System.out.println("Nombre Líder");

        try {
            ArrayList<LiderCiudad> rankingLiderCiudad = controlador.consultarLiderCiudad();

            for (LiderCiudad l : rankingLiderCiudad) {
                System.out.printf("%s %n", l.getNombreLíder());
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
}

//Controlador
public class ControladorRequerimientosReto4 {
    private ProyectoCiudadDao proyectoCiudadDao;
    private LiderCiudadDao liderCiudadDao;
    private SumaProveedorDao sumaProveedorDao;

    public ControladorRequerimientosReto4() {
        this.proyectoCiudadDao = new ProyectoCiudadDao();
        this.liderCiudadDao = new LiderCiudadDao();
        this.sumaProveedorDao = new SumaProveedorDao();
    }

    public ArrayList<ProyectoCiudad> consultarProyectoCiudad() throws SQLException {
        return this.proyectoCiudadDao.rankingProyectosCiudad();
    }

    public ArrayList<LiderCiudad> consultarLiderCiudad() throws SQLException {
        return this.liderCiudadDao.rankingLiderCiudad();
    }

    public ArrayList<SumaProveedor> consultarSumaProveedor() throws SQLException {
        return this.sumaProveedorDao.rankingSumaProveedor();
    }
}

//DAO´s

public class ProyectoCiudadDao {

    public ArrayList<ProyectoCiudad> rankingProyectosCiudad() throws SQLException {
        ArrayList<ProyectoCiudad> respuesta = new ArrayList<ProyectoCiudad>();
        Connection conexion = JDBCUtilities.getConnection();

        try {
            String consulta = "SELECT Constructora, " + "Fecha_Inicio, " + "Clasificacion " + "FROM Proyecto "
                    + "WHERE Ciudad = 'Santa Marta';";

            PreparedStatement statement = conexion.prepareStatement(consulta);
            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                ProyectoCiudad proyectoCiudad = new ProyectoCiudad();
                proyectoCiudad.setConstructora(resultSet.getString("Constructora"));
                proyectoCiudad.setFechaInicio(resultSet.getString("Fecha_Inicio"));
                proyectoCiudad.setClasificacion(resultSet.getString("Clasificacion"));
                respuesta.add(proyectoCiudad);
            }

            resultSet.close();
            statement.close();

        } catch (SQLException e) {
            System.err.println("Error consultando Proyecto Ciudad!!" + e);

        } finally {
            if (conexion != null) {
                conexion.close();
            }
        }

        return respuesta;        
    }  
}

public class SumaProveedorDao {
    public ArrayList<SumaProveedor> rankingSumaProveedor() throws SQLException {

        ArrayList<SumaProveedor> respuesta = new ArrayList<SumaProveedor>();
        Connection conexion = JDBCUtilities.getConnection();

        try {
            String consulta = "SELECT SUM(Cantidad) AS Cantidad " + "FROM Compra " + "WHERE Proveedor = 'JUMBO';";

            PreparedStatement statement = conexion.prepareStatement(consulta);
            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                SumaProveedor sumaProveedor = new SumaProveedor();
                sumaProveedor.setCantidad(resultSet.getString("Cantidad"));
                respuesta.add(sumaProveedor);
            }

            resultSet.close();
            statement.close();

        } catch (SQLException e) {
            System.err.println("Error consultando Suma Proveedor!!" + e);

        } finally {
            if (conexion != null) {
                conexion.close();
            }
        }

        return respuesta;
    }
}

public class LiderCiudadDao {
    public ArrayList<LiderCiudad> rankingLiderCiudad() throws SQLException {

        ArrayList<LiderCiudad> respuesta = new ArrayList<LiderCiudad>();
        Connection conexion = JDBCUtilities.getConnection();

        try {
            String consulta = "SELECT "
                    + "l.Nombre || ' ' ||l.Primer_Apellido || ' ' ||l.Segundo_Apellido AS 'Nombre Líder' "
                    + "FROM Lider l " + "WHERE l.Ciudad_Residencia = 'Dubai';";

            PreparedStatement statement = conexion.prepareStatement(consulta);
            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                LiderCiudad liderCiudad = new LiderCiudad();
                liderCiudad.setNombreLíder(resultSet.getString("Nombre Líder"));
                respuesta.add(liderCiudad);
            }

            resultSet.close();
            statement.close();

        } catch (SQLException e) {
            System.err.println("Error consultando Lider Ciudad!!" + e);

        } finally {
            if (conexion != null) {
                conexion.close();
            }
        }

        return respuesta;

    }
}


//VO´s

public class ProyectoCiudad {

    private String constructora;
    private String fechaInicio;
    private String clasificacion;

    public ProyectoCiudad() {
    }

    public ProyectoCiudad(String constructora, String fechaInicio, String clasificacion) {
        this.constructora = constructora;
        this.fechaInicio = fechaInicio;
        this.clasificacion = clasificacion;
    }

    public String getConstructora() {
        return constructora;
    }

    public void setConstructora(String constructora) {
        this.constructora = constructora;
    }

    public String getFechaInicio() {
        return fechaInicio;
    }

    public void setFechaInicio(String fechaInicio) {
        this.fechaInicio = fechaInicio;
    }

    public String getClasificacion() {
        return clasificacion;
    }

    public void setClasificacion(String clasificacion) {
        this.clasificacion = clasificacion;
    }
}


public class SumaProveedor {

    private String cantidad;

    public SumaProveedor() {
    }

    public SumaProveedor(String cantidad) {
        this.cantidad = cantidad;
    }

    public String getCantidad() {
        return cantidad;
    }

    public void setCantidad(String cantidad) {
        this.cantidad = cantidad;
    }

}


public class LiderCiudad {

    private String NombreLíder;

    public LiderCiudad() {

    }

    public LiderCiudad(String NombreLíder) {
        this.NombreLíder = NombreLíder;
    }

    public String getNombreLíder() {
        return NombreLíder;
    }

    public void setNombreLíder(String NombreLíder) {
        this.NombreLíder = NombreLíder;
    }

}

//Utilities

public class JDBCUtilities {

    // Atributos de clase para gestión de conexión con la base de datos
    private static final String UBICACION_BD = "ProyectosConstruccion.db";
    
    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:" + UBICACION_BD;
        return DriverManager.getConnection(url);
    }

    public static boolean estaVacia() {
        File archivo = new File(JDBCUtilities.UBICACION_BD);
        return archivo.length() == 0;
    }

}